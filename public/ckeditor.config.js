/******/ (() => { // webpackBootstrap
/*!***************************************!*\
  !*** ./public/src/ckeditor.config.js ***!
  \***************************************/
var lang = document.documentElement.lang;
if (lang == 'ru' && window.CKEDITOR_TRANSLATIONS && window.CKEDITOR_TRANSLATIONS.ru && window.CKEDITOR_TRANSLATIONS.ru.dictionary) {
  window.CKEDITOR_TRANSLATIONS.ru.dictionary.Source = 'Источник';
}
window.ckEditor5Config = {
  language: document.documentElement.lang,
  toolbar: {
    shouldNotGroupWhenFull: true,
    items: ['sourceEditing', '|', 'undo', 'redo', '|', 'findAndReplace', 'selectAll', '|', 'flmngrimg', 'flmngrfile', 'link', 'insertTable', 'horizontalLine', 'specialCharacters', 'pageBreak', 'htmlEmbed', 'mediaEmbed', '-', 'heading', 'showBlocks', '|', 'bold', 'italic', 'underline', 'strikethrough', 'subscript', 'superscript', 'removeFormat', '|', 'numberedList', 'bulletedList', 'outdent', 'indent', 'blockQuote', 'alignment', '|', 'fontColor', 'fontBackgroundColor', '-']
  },
  image: {
    toolbar: ['imageStyle:block', 'imageStyle:inline', 'imageStyle:alignLeft', 'imageStyle:alignRight', '|', 'toggleImageCaption', 'imageTextAlternative', '|', 'linkImage'],
    insert: {
      type: 'auto',
      integrations: [/*'upload', 'assetManager', */'url']
    }
  },
  table: {
    contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells', 'tableProperties', 'tableCellProperties']
  },
  mediaEmbed: {
    previewsInData: true
  },
  link: {
    decorators: {
      toggleDownloadable: {
        mode: 'manual',
        label: 'Downloadable',
        attributes: {
          download: 'file'
        }
      },
      openInNewTab: {
        mode: 'manual',
        label: 'Open in a new tab',
        defaultValue: false,
        attributes: {
          target: '_blank',
          rel: 'noopener noreferrer'
        }
      }
    }
  },
  fontColor: {
    colorPicker: {
      format: 'hex'
    }
  },
  fontBackgroundColor: {
    colorPicker: {
      format: 'hex'
    }
  },
  heading: {
    options: [{
      model: 'paragraph',
      title: 'Paragraph',
      "class": 'ck-heading_paragraph'
    }, {
      model: 'div',
      view: 'div',
      title: '<DIV>'
    }, {
      model: 'heading1',
      view: 'h1',
      title: 'Heading 1',
      "class": 'ck-heading_heading1'
    }, {
      model: 'heading2',
      view: 'h2',
      title: 'Heading 2',
      "class": 'ck-heading_heading2'
    }, {
      model: 'heading3',
      view: 'h3',
      title: 'Heading 3',
      "class": 'ck-heading_heading3'
    }, {
      model: 'pre',
      view: 'pre',
      title: '<PRE>'
    }]
  },
  htmlSupport: {
    allow: [{
      // name: /.*/,
      attributes: true,
      classes: true,
      styles: true
    }]
  },
  Flmngr: {
    apiKey: "FLMNFLMN" // or your own API key
  }
};
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SSxFQUFFLEtBQUs7TUFBRUQsS0FBSyxFQUFFO0lBQVEsQ0FBQyxFQUM3QztNQUFFRCxLQUFLLEVBQUUsVUFBVTtNQUFFRSxJQUFJLEVBQUUsSUFBSTtNQUFFRCxLQUFLLEVBQUUsV0FBVztNQUFFLFNBQU87SUFBc0IsQ0FBQyxFQUNuRjtNQUFFRCxLQUFLLEVBQUUsVUFBVTtNQUFFRSxJQUFJLEVBQUUsSUFBSTtNQUFFRCxLQUFLLEVBQUUsV0FBVztNQUFFLFNBQU87SUFBc0IsQ0FBQyxFQUNuRjtNQUFFRCxLQUFLLEVBQUUsVUFBVTtNQUFFRSxJQUFJLEVBQUUsSUFBSTtNQUFFRCxLQUFLLEVBQUUsV0FBVztNQUFFLFNBQU87SUFBc0IsQ0FBQyxFQUNuRjtNQUFFRCxLQUFLLEVBQUUsS0FBSztNQUFFRSxJQUFJLEVBQUUsS0FBSztNQUFFRCxLQUFLLEVBQUU7SUFBUSxDQUFDO0VBRXJELENBQUM7RUFDREUsV0FBVyxFQUFFO0lBQ1RDLEtBQUssRUFBRSxDQUNIO01BQ0k7TUFDQWhCLFVBQVUsRUFBRSxJQUFJO01BQ2hCaUIsT0FBTyxFQUFFLElBQUk7TUFDYkMsTUFBTSxFQUFFO0lBQ1osQ0FBQztFQUVULENBQUM7RUFDREMsTUFBTSxFQUFFO0lBQ0pDLE1BQU0sRUFBRSxVQUFVLENBQUU7RUFDeEI7QUFDSixDQUFDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wdWJsaWMvc3JjL2NrZWRpdG9yLmNvbmZpZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmNvbnN0IGxhbmcgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubGFuZztcclxuaWYgKChsYW5nID09ICdydScpICYmIFxyXG4gICAgd2luZG93LkNLRURJVE9SX1RSQU5TTEFUSU9OUyAmJiBcclxuICAgIHdpbmRvdy5DS0VESVRPUl9UUkFOU0xBVElPTlMucnUgJiYgXHJcbiAgICB3aW5kb3cuQ0tFRElUT1JfVFJBTlNMQVRJT05TLnJ1LmRpY3Rpb25hcnlcclxuKSB7XHJcbiAgICB3aW5kb3cuQ0tFRElUT1JfVFJBTlNMQVRJT05TLnJ1LmRpY3Rpb25hcnkuU291cmNlID0gJ9CY0YHRgtC+0YfQvdC40LonO1xyXG59XHJcblxyXG53aW5kb3cuY2tFZGl0b3I1Q29uZmlnID0ge1xyXG4gICAgbGFuZ3VhZ2U6IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sYW5nLFxyXG4gICAgdG9vbGJhcjp7XHJcbiAgICAgICAgc2hvdWxkTm90R3JvdXBXaGVuRnVsbDogdHJ1ZSxcclxuICAgICAgICBpdGVtczogWyBcclxuICAgICAgICAgICAgJ3NvdXJjZUVkaXRpbmcnLCAnfCcsIFxyXG4gICAgICAgICAgICAndW5kbycsICdyZWRvJywgJ3wnLCBcclxuICAgICAgICAgICAgJ2ZpbmRBbmRSZXBsYWNlJywgJ3NlbGVjdEFsbCcsICd8JywgXHJcbiAgICAgICAgICAgICdmbG1uZ3JpbWcnLCAnZmxtbmdyZmlsZScsICdsaW5rJywgJ2luc2VydFRhYmxlJywgJ2hvcml6b250YWxMaW5lJywgJ3NwZWNpYWxDaGFyYWN0ZXJzJywgJ3BhZ2VCcmVhaycsICdodG1sRW1iZWQnLCAnbWVkaWFFbWJlZCcsICctJywgXHJcbiAgICAgICAgICAgICdoZWFkaW5nJywgJ3Nob3dCbG9ja3MnLCAnfCcsICdib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnLCAnc3RyaWtldGhyb3VnaCcsICdzdWJzY3JpcHQnLCAnc3VwZXJzY3JpcHQnLCAncmVtb3ZlRm9ybWF0JywgJ3wnLFxyXG4gICAgICAgICAgICAnbnVtYmVyZWRMaXN0JywgJ2J1bGxldGVkTGlzdCcsICdvdXRkZW50JywgJ2luZGVudCcsICdibG9ja1F1b3RlJywgJ2FsaWdubWVudCcsICd8JyxcclxuICAgICAgICAgICAgJ2ZvbnRDb2xvcicsICdmb250QmFja2dyb3VuZENvbG9yJywgJy0nLFxyXG4gICAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgaW1hZ2U6IHtcclxuICAgICAgICB0b29sYmFyOiBbXHJcbiAgICAgICAgICAgICdpbWFnZVN0eWxlOmJsb2NrJywgJ2ltYWdlU3R5bGU6aW5saW5lJywgJ2ltYWdlU3R5bGU6YWxpZ25MZWZ0JywgJ2ltYWdlU3R5bGU6YWxpZ25SaWdodCcsICd8JyxcclxuICAgICAgICAgICAgJ3RvZ2dsZUltYWdlQ2FwdGlvbicsICdpbWFnZVRleHRBbHRlcm5hdGl2ZScsICd8JyxcclxuICAgICAgICAgICAgJ2xpbmtJbWFnZScsXHJcbiAgICAgICAgXSxcclxuICAgICAgICBpbnNlcnQ6IHtcclxuICAgICAgICAgICAgdHlwZTogJ2F1dG8nLFxyXG4gICAgICAgICAgICBpbnRlZ3JhdGlvbnM6IFsgLyondXBsb2FkJywgJ2Fzc2V0TWFuYWdlcicsICovJ3VybCcgXVxyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgdGFibGU6IHtcclxuICAgICAgICBjb250ZW50VG9vbGJhcjogWyAndGFibGVDb2x1bW4nLCAndGFibGVSb3cnLCAnbWVyZ2VUYWJsZUNlbGxzJywgJ3RhYmxlUHJvcGVydGllcycsICd0YWJsZUNlbGxQcm9wZXJ0aWVzJyBdLFxyXG4gICAgfSxcclxuICAgIG1lZGlhRW1iZWQ6IHtcclxuICAgICAgICBwcmV2aWV3c0luRGF0YTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICBsaW5rOiB7XHJcbiAgICAgICAgZGVjb3JhdG9yczoge1xyXG4gICAgICAgICAgICB0b2dnbGVEb3dubG9hZGFibGU6IHtcclxuICAgICAgICAgICAgICAgIG1vZGU6ICdtYW51YWwnLFxyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdEb3dubG9hZGFibGUnLFxyXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczoge1xyXG4gICAgICAgICAgICAgICAgICAgIGRvd25sb2FkOiAnZmlsZSdcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb3BlbkluTmV3VGFiOiB7XHJcbiAgICAgICAgICAgICAgICBtb2RlOiAnbWFudWFsJyxcclxuICAgICAgICAgICAgICAgIGxhYmVsOiAnT3BlbiBpbiBhIG5ldyB0YWInLFxyXG4gICAgICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXQ6ICdfYmxhbmsnLFxyXG4gICAgICAgICAgICAgICAgICAgIHJlbDogJ25vb3BlbmVyIG5vcmVmZXJyZXInXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgZm9udENvbG9yOiB7XHJcbiAgICAgICAgY29sb3JQaWNrZXI6IHtcclxuICAgICAgICAgICAgZm9ybWF0OiAnaGV4J1xyXG4gICAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgZm9udEJhY2tncm91bmRDb2xvcjoge1xyXG4gICAgICAgIGNvbG9yUGlja2VyOiB7XHJcbiAgICAgICAgICAgIGZvcm1hdDogJ2hleCcsXHJcbiAgICAgICAgfSxcclxuICAgIH0sXHJcbiAgICBoZWFkaW5nOiB7XHJcbiAgICAgICAgb3B0aW9uczogW1xyXG4gICAgICAgICAgICB7IG1vZGVsOiAncGFyYWdyYXBoJywgdGl0bGU6ICdQYXJhZ3JhcGgnLCBjbGFzczogJ2NrLWhlYWRpbmdfcGFyYWdyYXBoJyB9LFxyXG4gICAgICAgICAgICB7IG1vZGVsOiAnZGl2JywgdmlldzogJ2RpdicsIHRpdGxlOiAnPERJVj4nIH0sXHJcbiAgICAgICAgICAgIHsgbW9kZWw6ICdoZWFkaW5nMScsIHZpZXc6ICdoMScsIHRpdGxlOiAnSGVhZGluZyAxJywgY2xhc3M6ICdjay1oZWFkaW5nX2hlYWRpbmcxJyB9LFxyXG4gICAgICAgICAgICB7IG1vZGVsOiAnaGVhZGluZzInLCB2aWV3OiAnaDInLCB0aXRsZTogJ0hlYWRpbmcgMicsIGNsYXNzOiAnY2staGVhZGluZ19oZWFkaW5nMicgfSxcclxuICAgICAgICAgICAgeyBtb2RlbDogJ2hlYWRpbmczJywgdmlldzogJ2gzJywgdGl0bGU6ICdIZWFkaW5nIDMnLCBjbGFzczogJ2NrLWhlYWRpbmdfaGVhZGluZzMnIH0sXHJcbiAgICAgICAgICAgIHsgbW9kZWw6ICdwcmUnLCB2aWV3OiAncHJlJywgdGl0bGU6ICc8UFJFPicgfSxcclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAgaHRtbFN1cHBvcnQ6IHtcclxuICAgICAgICBhbGxvdzogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAvLyBuYW1lOiAvLiovLFxyXG4gICAgICAgICAgICAgICAgYXR0cmlidXRlczogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGNsYXNzZXM6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBzdHlsZXM6IHRydWUsXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAgRmxtbmdyOiB7XHJcbiAgICAgICAgYXBpS2V5OiBcIkZMTU5GTE1OXCIsIC8vIG9yIHlvdXIgb3duIEFQSSBrZXlcclxuICAgIH0sXHJcbn07XHJcblxyXG4iXSwibmFtZXMiOlsibGFuZyIsImRvY3VtZW50IiwiZG9jdW1lbnRFbGVtZW50Iiwid2luZG93IiwiQ0tFRElUT1JfVFJBTlNMQVRJT05TIiwicnUiLCJkaWN0aW9uYXJ5IiwiU291cmNlIiwiY2tFZGl0b3I1Q29uZmlnIiwibGFuZ3VhZ2UiLCJ0b29sYmFyIiwic2hvdWxkTm90R3JvdXBXaGVuRnVsbCIsIml0ZW1zIiwiaW1hZ2UiLCJpbnNlcnQiLCJ0eXBlIiwiaW50ZWdyYXRpb25zIiwidGFibGUiLCJjb250ZW50VG9vbGJhciIsIm1lZGlhRW1iZWQiLCJwcmV2aWV3c0luRGF0YSIsImxpbmsiLCJkZWNvcmF0b3JzIiwidG9nZ2xlRG93bmxvYWRhYmxlIiwibW9kZSIsImxhYmVsIiwiYXR0cmlidXRlcyIsImRvd25sb2FkIiwib3BlbkluTmV3VGFiIiwiZGVmYXVsdFZhbHVlIiwidGFyZ2V0IiwicmVsIiwiZm9udENvbG9yIiwiY29sb3JQaWNrZXIiLCJmb3JtYXQiLCJmb250QmFja2dyb3VuZENvbG9yIiwiaGVhZGluZyIsIm9wdGlvbnMiLCJtb2RlbCIsInRpdGxlIiwidmlldyIsImh0bWxTdXBwb3J0IiwiYWxsb3ciLCJjbGFzc2VzIiwic3R5bGVzIiwiRmxtbmdyIiwiYXBpS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==